/** * sekati.events.LoaderQueueEvent * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events {	import flash.events.Event;	/**	 * LoaderQueueEvent	 * @see sekati.load.LoaderQueue	 */	public class LoaderQueueEvent extends Event {		public static const START : String = 'queueStart';		public static const STOP : String = 'queueStop';		public static const PROGRESS : String = 'queueProgress';				public static const ERROR : String = 'queueError';			public static const COMPLETE : String = 'queueComplete';		//		public static const ITEM_START : String = 'itemStart';		public static const ITEM_PROGRESS : String = 'itemProgress';		public static const ITEM_ERROR : String = 'itemError';		public static const ITEM_CLOSE : String = 'itemClose';		public static const ITEM_INIT : String = 'itemInit';		/**		 * LoaderQueueEvent Constructor		 */		public function LoaderQueueEvent(type : String, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );		}		/**		 * @inheritDoc		 */		override public function clone() : Event {			return new LoaderQueueEvent( type, bubbles, cancelable );		}	}}