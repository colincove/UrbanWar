/** * sekati.load.SoundLoader * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import sekati.load.AbstractLoader;	import sekati.load.ILoader;	import flash.media.Sound;	import flash.media.SoundLoaderContext;			/**	 * SoundLoader provides a standard API loader for <code>Sound</code> media content.	 * 	 * @example <listing version="3.0">	 * var loader : SoundLoader = new SoundLoader( "http://localhost/path/to/my.mp3" );	 * loader.addEventListener( Event.INIT, playSound );	 * loader.load( );	 * 	 * private function playSound(e : Event) : void {	 * 		loader.removeEventListener( Event.INIT, playSound );	 * 		loader.content.play();	 * 		trace( "ID3 info: " + loader.content.id3 );	 * }	 * </listing>	 */	public class SoundLoader extends AbstractLoader implements ILoader {		/**		 * SoundLoader Constructor		 * @param url 				of the audio file.		 * @param bufferTime 		to load before sound may be streamably played.		 * @param loadPolicyFile 	determines whether the <code>crossdomain.xml</code> will be loaded.		 */		public function SoundLoader(url : String, bufferTime : Number = NaN, loadPolicyFile : Boolean = false) {			super( Sound, url );			if(isNaN( bufferTime ) == false || loadPolicyFile == false) {				soundContext = new SoundLoaderContext( bufferTime, loadPolicyFile );			}		}		/**		 * The <i>strictly-typed</i> <code>Sound</code> loader content.		 */		public function get content() : Sound {			return Sound( rawContent );		}	}}