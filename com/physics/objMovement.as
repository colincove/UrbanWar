package com.physics{	import com.globals;	import com.myMath.hitTestLine;	import flash.display.MovieClip;	import com.globalFunctions;	public class objMovement extends gravity {		protected var radius:Number;		protected var right:Boolean;		protected var left:Boolean;		protected var wall:Boolean;		protected var dir:int;		protected var ghost:Boolean;		protected var bounce:Number;		protected var speedDir:int;		protected var headRoom:int=0;		public function objMovement():void {			super();			dir=1;			bounce=0;			radius=20;		}				protected function movementUpdate():void {			if (ground==null) {				ground=globals.groundContainer;			}			if (xSpeed<0) {				speedDir=-1;			} else {				speedDir=1;			}			if (! ghost) {								if (ground.hitTestPoint(globalFunctions.getMainX(this),globalFunctions.getMainY(this)+ySpeed+1,true)) {					if (haveAir) {						y+=hitTestLine.getLine(globalFunctions.getMainX(this),globalFunctions.getMainY(this),ground,20,5,true,0,1);						ySpeed=ySpeed*bounce*-1;						if ((bounce!=0)&&(ySpeed>-2)) {							xSpeed=xSpeed*bounce;							y-=2;						} else {							haveAir=false;						}					} else {						if (ground.hitTestPoint(globalFunctions.getMainX(this),globalFunctions.getMainY(this)+1,true)) {							y-=hitTestLine.getLine(globalFunctions.getMainX(this),globalFunctions.getMainY(this),ground,20,5,false,0,-1);						}					}				} else {					gravPull();				}				if (right||left||haveAir) {				} else {					xSpeed=xSpeed*globals.fric;				}				if (ground.hitTestPoint(globalFunctions.getMainX(this),globalFunctions.getMainY(this)-radius+ySpeed,true)) {					ySpeed=0;					y+=1;				}				if (ground.hitTestPoint(globalFunctions.getMainX(this)+(radius)*-1, globalFunctions.getMainY(this)-radius, true)) {					hitWall(-1);				}				if (ground.hitTestPoint(globalFunctions.getMainX(this)+(radius), globalFunctions.getMainY(this)-radius, true)) {					hitWall(1);				}			}		}		private function hitWall(side:int):void {			if (ground.hitTestPoint(globalFunctions.getMainX(this)+radius*speedDir,globalFunctions.getMainY(this)-radius,true)) {				x+=hitTestLine.getLine(globalFunctions.getMainX(this)+radius*side,globalFunctions.getMainY(this)-radius,ground,20,5,false,side*-1,0)*(side*-1);				xSpeed=xSpeed*bounce*-1;				//ySpeed=ySpeed*bounce;			}		}	}}