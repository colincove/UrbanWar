/** * sekati.events.BrowserEvent * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events {	import flash.events.Event;	/**	 * BrowserEvent provides the main <code>Event</code> object for the API <code>BrowserManager</code> facility.	 * @see sekati.managers.BrowserManager	 */	public class BrowserEvent extends Event {				/**		 * @eventType addressChanged		 * Indicates that the <code>BrowserManager</code> has detected a <code>ADDRESS_CHANGE</code> not made by the <code>BrowserManager</code> itself.		 */		public static const ADDRESS_CHANGE : String = 'addressChanged';		/*** @private */		protected var _path : String;		/*** @private */		protected var _previousPath : String;		/**		 * BrowserEvent Constructor		 */		public function BrowserEvent(type : String, path : String = null, previousPath : String = null, bubbles : Boolean = false, cancelable : Boolean = false) {			super( type, bubbles, cancelable );			_path = path;			_previousPath = previousPath;		}		/**		 * @inheritDoc		 */		public override function clone() : Event {				return new BrowserEvent( type, _path, _previousPath, bubbles, cancelable );			}		/**		 * The new browser path.		 */		public function get path() : String {			return _path;		}		/**		 * The previous browser path.		 */		public function get previousPath() : String {			return _previousPath;		}	}}