/** * sekati.load.ImageLoader * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.load {	import sekati.load.AbstractLoader;	import sekati.load.ILoader;		import flash.display.Bitmap;	import flash.display.Loader;	import flash.events.Event;		/**	 * ImageLoader provides a standard API loader for graphical <code>Bitmap</code> content.	 * 	 * @example <listing version="3.0">	 * var loader : ImageLoader = new ImageLoader( "http://localhost/path/to/image.png" );	 * loader.addEventListener( Event.INIT, addGraphic );	 * loader.load( );	 * 	 * private function addGraphic(e : Event) : void {	 * 		loader.removeEventListener( Event.INIT, addGraphic );	 * 		addChild( loader.content );	 * }	 * </listing>	 */	public class ImageLoader extends AbstractLoader implements ILoader {		/**		 * ImageLoader Constructor		 * @param url 	of the graphic file.		 */		public function ImageLoader(url : String) {			super( Loader, url );		}		/**		 * @inheritDoc		 */		override protected function initHandler(e : Event) : void {			super.initHandler( e );			content.smoothing = true;		}		/**		 * The <i>strictly-typed</i> <code>Bitmap</code> loader content.		 */		public function get content() : Bitmap {			return rawContent as Bitmap;		}	}}