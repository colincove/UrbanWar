package {	import flash.display.MovieClip;	import com.globals;	import com.Prog;	import com.UI.*;import com.Sound.GlobalSounds;import flash.events.TimerEvent;import flash.utils.Timer;	public class scrollerDocumentClass extends MovieClip {		var weaponUI:MovieClip;		var levelUI:MovieClip;			var pauseUI:MovieClip;		var game:gameStart;		var loginScreen:LoginScreen;		var titleScreen:TitleScreen;		var leaderboards:Leaderboards;		var menuBackground:MovieClip;		var levelEndTimer:Timer;var endLevelScreen:EndLevelScreen;		public function scrollerDocumentClass():void 		{			GlobalSounds.defineSounds();			menuBackground=new MenuBackground();			globals.prog=new Prog();			globals.game_progThread=globals.prog.newThread();			globals.menus_progThread=globals.prog.newThread();			globals.static_progThread=globals.prog.newThread();			weaponUI  =  new GameMenu();		levelUI  =  new levelMenu();			pauseUI  =  new PauseUI();			loginScreen = new LoginScreen();			globals.setMain(this);//must set before starting game. 			globals.setGravity(1);//must set before starting game.			launchLoginScreen();			game = new gameStart();			titleScreen = new TitleScreen();			leaderboards=new Leaderboards();			endLevelScreen = new EndLevelScreen();		}		public function launchEndLevelScreen():void		{			if(endLevelScreen==null)			{				endLevelScreen=new EndLevelScreen();			}			endLevelScreen.launch();		}		private function validateMenuBackground():void		{			if(!menuBackground.parent)						{			this.addChild(menuBackground);			}		}		public function launchWeaponMenu():void 		{			this.x=0;			this.y=0;			weaponUI.launch();			this.addChild(weaponUI);		}		public function launchPauseMenu():void 		{			this.addChild(pauseUI);			pauseUI.x=globals.HUD.x;			pauseUI.y=globals.HUD.y;		}		public function removePauseMenu():void {			pauseUI.parent.removeChild(pauseUI);		}		public function launchLevelMenu():void {			this.x=0;			this.y=0;			//weaponUI.launch();			this.addChild(levelUI);		}		public function loginComplete():void		{			launchTitleScreen();		}		public function playGame():void		{			if(menuBackground.parent)			{			this.removeChild(menuBackground);			}			game.startLevel();		}		public function launchTitleScreen():void 		{			validateMenuBackground()			this.x=0;			this.y=0;			//weaponUI.launch();			titleScreen.launch();			this.addChild(titleScreen);		}				public function launchLeaderboards():void				{			this.x=0;			this.y=0;			leaderboards.launch();			//weaponUI.launch();			this.addChild(leaderboards);		}		public function launchLoginScreen():void{			validateMenuBackground()			addChild(loginScreen);		}		public function getWeaponMenu():MovieClip		{			return weaponUI;		}		public function getGame():gameStart		{		return game;		}				public function heroDie():void		{			globals.gameVars.orbs=globals.gameVars.oldOrbs;			globals.HUD.stopCAM();			if(game.levelsUnlocked==1)			{				//if the hero died while on the first level, we need to remove the jetpack that he retrieved. 				if(globals.hero.jetpack!=null){				globals.hero.jetpack.destroy();				globals.hero.jetpack=null;				}			}			levelEndTimer = new Timer(5000);			levelEndTimer.addEventListener(TimerEvent.TIMER,endLevelTimer);			levelEndTimer.start();			WeaponList.loadWeapons(WeaponList.oldInventory);					}		public function endLevelTimer(e:TimerEvent):void		{						levelEndTimer.reset();				levelEndTimer.removeEventListener(TimerEvent.TIMER,endLevelTimer);								globals.main.getGame().endCurrentLevel();		}	}}