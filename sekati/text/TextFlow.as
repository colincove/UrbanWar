/** * sekati.text.TextFlow * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php *  * Portions of this class were adopted from TextFlowLite by G.Skinner. */package sekati.text {	import sekati.collections.TypedArray;	import flash.text.TextField;			/**	 * TextFlow provides a virtual multi-column <code>TextField</code> comprised of multiple fields.	 * @example <listing version="3.0">	 * 		var flowField : TextFlow = new TextFlow( tf0, tf1, tf2 );	 * 		flowField.text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. In id mi ac magna iaculis congue.";	 * </listing>	 */	public class TextFlow {		/*** @private */		protected var _fields : TypedArray;				/*** @private */		protected var _text : String;		/**		 * TextFlow Constructor		 */		public function TextFlow(...fields) {			_fields = new TypedArray( TextField );			for (var i : int = 0; i < fields.length ; i++) {				_fields.push( fields[i] );			}			reflow( );		}		/**		 * Reflow the text between fields (used when visual characteristics of a field changes).		 */		public function reflow() : void {			_fields[0].text = _text;			var len : int = _fields.length - 1;			for (var i : int = 0; i < len ; i++) {				flowFields( _fields[i], _fields[i + 1] );					}		}		/**		 * Flow the text string from one field to the next.		 */		protected function flowFields(tf0 : TextField, tf1 : TextField) : void {			tf0.scrollV = 1;			tf1.text = '';			if(tf0.maxScrollV <= 1) return;			try {				var nextCharIndex : Number = tf0.getLineOffset( tf0.bottomScrollV );				tf1.text = tf0.text.substr( nextCharIndex ).replace( /^\s+/, '' );				tf0.text = tf0.text.substr( 0, nextCharIndex ).replace( /\s+$/, '' );			} catch (e : Error) {				// work around reporting maxScrollV			}		}		/**		 * The text string flowed through to the fields.		 */		public function get text() : String {			return _text;		}		/*** @private */		public function set text(value : String) : void {			_text = value;			reflow( );		}		/**		 * The number of columns in the flow.		 */		public function get columns() : uint {			return _fields.length;		}	}}