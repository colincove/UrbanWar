/** * sekati.events.BootstrapEvent * @version 1.0.6 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.events {	import flash.events.Event;	/**	 * Application BootstrapEvent's fired during the bootstrapping process of Sekati API.	 * @see sekati.core.Bootstrap	 */	public class BootstrapEvent extends Event {				/**		 * @eventType appLoad		 * Indicates the application has loaded successfully.		 */		public static const APP_LOAD : String = "appLoad";		/**		 * @eventType appConfigLoad 		 * Indicates the application configuration file has loaded successfully.		 */		public static const APP_CONFIG : String = "appConfigLoad";				/**		 * @eventType appDataLoad 		 * Indicates the application data has loaded successfully.		 */		public static const APP_DATA : String = "appDataLoad";				/**		 * @eventType appStyleLoad		 * Indicates the application stylesheet has loaded successfully.		 */		public static const APP_STYLE : String = "appStyleLoad";				/**		 * @eventType appInit		 * Indicates the application has successfully initialized.		 */				public static const APP_INIT : String = "appInit";				/**		 * @eventType appFailure		 * Indicates the application has <i>failed</i> to initialize.		 */		public static const APP_FAIL : String = "appFailure";		/**		 * BootstrapEvent Constructor		 */		public function BootstrapEvent(type : String, bubbles : Boolean = true, cancelable : Boolean = false) {			super( type, bubbles, cancelable );		}		/**		 * @inheritDoc		 */		public override function clone() : Event {				return new BootstrapEvent( type, bubbles, cancelable );			}	}}