/** * sekati.ui.AbstractPreloader * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.ui {	import sekati.display.CoreSprite;	import sekati.events.FramePulse;	import sekati.ui.AbstractPreloader;	import sekati.utils.TypeEnforcer;	import flash.events.Event;			/**	 * AbstractPreloader provides a <i>Preloader</i> UI Abstract element.	 */	public class AbstractPreloader extends CoreSprite {		/**		 * AbstractPreloader Constructor		 */		public function AbstractPreloader() {			super( );			TypeEnforcer.enforceAbstract( this, AbstractPreloader );			configUI( );		}		/**		 * Configure UI elements.		 */		protected function configUI() : void {		}		/**		 * Automatically start the animation when added to stage.<br/><br/>		 * 		 * @inheritDoc		 */		override protected function onStage(e : Event = null) : void {			super.onStage( e );			start( );		}		/**		 * Automatically stop the animation when removed to stage.<br/><br/>		 * 		 * @inheritDoc		 */		override protected function offStage(e : Event = null) : void {			super.offStage( e );			stop( );		}		/**		 * Start the animation.		 */		public function start() : void {			FramePulse.$.addFrameListener( progress );		}		/**		 * Stop the animation.		 */		public function stop() : void {			FramePulse.$.removeFrameListener( progress );		}		/**		 * Animate to display progress on each frame.		 */		protected function progress(e : Event = null) : void {		}		/**		 * @inheritDoc		 */		override public function destroy() : void {			stop( );			super.destroy( );		}	}}