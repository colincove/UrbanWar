/** * sekati.net.NetBase * @version 1.0.6 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.net {	import sekati.display.Canvas;	import sekati.utils.TypeEnforcer;	import sekati.validators.StringValidator;	import flash.display.LoaderInfo;	import flash.external.ExternalInterface;	import flash.net.LocalConnection;	import flash.net.URLRequest;	import flash.net.navigateToURL;			/**	 * Static class wrapping various Network utilities.	 */	public class NetBase {		/**		 * Determines the domain from which this SWF is executing.		 */		public static const EXECUTING_DOMAIN : String = new LocalConnection( ).domain;		/**		 * A retro <code>getURL</code> wrapper for AS3.		 * @param url 		The URL to navigate to.		 * @param window 	The window to open the URL in.		 */		public static function getURL(url : String, window : String = "_self") : void {			navigateToURL( new URLRequest( url ), window );		}		/**		 * Add a cache killing querystring to url		 * @param url (String)		 * @return String		 * @example <listing version="3.0">		 * var ckUrl = NetBase.noCacheUrl( "http://localhost/page.html" ); // returns: http://localhost/page.html?030533		 * 	</listing>		 */		public static function noCacheUrl(url : String) : String {			return url + "?" + new Date( ).getTime( );			}		/**		 * return the URL Path swf is running under		 * @return String		 * @example <listing version="3.0">		 * 	// run from http://localhost/myProject/site.swf		 * 	trace(NetBase.path); // returns "http://localhost/myProject/"		 * 	</listing>		 */		public static function get path() : String {			var _url : String = Canvas.root.loaderInfo.loaderURL;			return( _url.substr( 0, _url.lastIndexOf( '/' ) + 1 ) );		}				/**		 * Get the full browser href location.		 */		public static function get location() : String {			return ExternalInterface.call( 'function(){return location.href}' );			}		/**		 * Check if we are online the swf is being executed over http.		 * @return Boolean		 */		public static function get isOnline() : Boolean {			var _url : String = Canvas.root.loaderInfo.loaderURL;			return StringValidator.isURL( _url );		}		/**		 * Check if the SWF is executing on localhost.		 */		public static function get isLocalhost() : Boolean {			return (EXECUTING_DOMAIN == 'localhost');		}		/**		 * NetBase Static Constructor		 */		public function NetBase() {			TypeEnforcer.enforceStatic( NetBase );		}	}}