/** * sekati.validators.BitmapValidator * @version 1.0.2 * @author jason m horwitz | sekati.com * Copyright (C) 2008  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.validators {	import sekati.utils.TypeEnforcer;		import flash.display.DisplayObject;			/**	 * BitmapValidator provides constants & validation to manage <code>Bitmap, BitmapData & DisplayObject<code>'s.	 */	public class BitmapValidator {		/**		 * The maximum dimension of a squared <code>BitmapData</code> object in the Flash Player.<ul>		 * <li><= FP9: 2880 pixel maximum per squared.</li>		 * <li>>= FP10: 4095 pixel maximum squared (<i>large bitmap support. <b>Note</b> that <code>4096x4096</code> exceeds <code>MAX_PIXELS</code></i>).</li></ul>		 * @see #MAX_SIDE_LENGTH		 */		public static const MAX_SIZE : int = (!FlashValidator.isMinVersion( 10 )) ? 2880 : 4095;				/**		 * The maximum safe dimensions of a <code>BitmapData</code> object in the Flash >=9. Use as a good safe value.<ul>		 * @see #MAX_SIZE		 * @see #MAX_SIDE_LENGTH		 */		public static const MAX_SIZE_SAFE : int = 2880;				/**		 * The maximum <i>possible</i> size if a <code>BitmapData</code> object size.<ul>		 * <li><= FP9: 2880 pixels per side.</li>		 * <li>>= FP10: 8191 pixels per side (<i>large bitmap support allows this <b>only</b> so long as the object remains under the <code>MAX_PIXELS</code> size</i>).</li></ul>		 * @see #MAX_PIXELS		 */		public static const MAX_SIDE_LENGTH : int = (!FlashValidator.isMinVersion( 10 )) ? 2880 : 8191;				/**		 * The maximum number of possible pixels in a <code>BitmapData</code> object in the Flash Player.<ul>		 * <li><= FP9: 8,294,400 pixels total (<i>aka 2880x2880</i>) .</li>		 * <li>>= FP10: 16,777,215 pixels total (<i>aka 0xFFFFFF, large bitmap support</i>).</li></ul>		 * @see #MAX_SIZE		 */		public static const MAX_PIXELS : int = (!FlashValidator.isMinVersion( 10 )) ? 8294400 : 16777215;		/**		 * Determines whether the dimensions of a <code>DisplayObject</code> are of a bitmappable size (within player version limitations).		 */		public static function isBitmappable(src : DisplayObject) : Boolean {			return isBitmappableArea( src.width, src.height );		}		/**		 * Determines whether the given dimensions are of a bitmappable size (within player version limitations).		 */		public static function isBitmappableArea(width : int, height : int) : Boolean {			if(width > MAX_SIDE_LENGTH || height > MAX_SIDE_LENGTH || (width * height) > MAX_PIXELS) {				return false;			}			return true;		}		/**		 * BitmapValidator Static Constructor		 */		public function BitmapValidator() {			TypeEnforcer.enforceStatic( BitmapValidator );		}	}}