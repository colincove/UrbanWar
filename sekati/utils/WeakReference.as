/** * sekati.utils.WeakReference * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2008 jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.utils {	import flash.utils.Dictionary;	/**	 * Create a weak reference of an object instance for easier garbage colleciton of 	 * difficult to track Objects: if this is the only reference left the instance is	 * elidgible for garbage collection.	 * 	 * @see http://www.bigroom.co.uk/blog/create-your-own-weak-references-in-actionscript-3	 * @see http://www.partlyhuman.com/blog/index.php?s=strong+weak+reference	 */	public class WeakReference {		/*** @private */		protected var dictionary : Dictionary;		/**		 * WeakReference Constructor		 * @param reference the instance to wrap weakly referenced		 * @example <listing version="3.0">		 * // Create a weak reference		 * var weak:WeakReference = new WeakReference( obj );		 * 		 * // Use the referenced object		 * var strong = weak.get();		 * if( strong != null ) {		 * 	// use strong here		 * } else {		 * 	// garbage collector has disposed of the object		 * }		 * </listing>		 */		public function WeakReference( reference : Object ) {			dictionary = new Dictionary( true );			dictionary[ reference ] = true;		}		/**		 * The wrapped instance; this property is <code>null</code> if the wrapped instance was already garbage collected. 		 */		public function get() : Object {			for( var reference : Object in dictionary ) {				return reference;			}			return null;		}	}}