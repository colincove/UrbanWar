/** * sekati.media.IProgressiveMedia * @version 1.0.1 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.media {	import flash.events.IEventDispatcher;			/**	 * IProgressiveMedia provides a common interface for progressive playable media.	 */	public interface IProgressiveMedia extends IEventDispatcher {		/**		 * Load the media and begin playback.		 * @param url 		of the media to be loaded.		 * @param buffer 	in seconds.		 * @throws 			ArgumentError if <code>url</code> is not proper file type.		 */		function load(url : String, buffer : uint = 4) : void		/**		 * Start playback.		 */		function play() : void;		/**		 * Stop playback.		 */		function stop() : void;		/**		 * Pause playback.		 */		function pause() : void;		/**		 * Resume playback.		 */		function resume() : void;		/**		 * Pause/Resume playback toggle.		 */		function togglePause() : void; 		/**		 * Seek to a playback time.		 * @param time 		in playback to seek to.		 */		function seek(time : Number) : void;		/**		 * Seek to a playback percent (0 - 1).		 * @param percent 	of playback to seek to.		 */		function seekToPercent(percent : Number) : void;		/**		 * Fast-Forward playback.		 * @param seconds 		to step forward.		 */		function fastForward(seconds : Number = 2) : void;		/**		 * Rewind playback.		 * @param seconds 		to step back.		 */		function rewind(seconds : Number = 2) : void		/**		 * Stop playback and cleanup.		 */		function destroy() : void;		/**		 * Paused status.		 */		function get isPaused() : Boolean;		/**		 * Buffering status.		 */		function get isBuffering() : Boolean;		/**		 * Playing status.		 */		function get isPlaying() : Boolean;		/**		 * Stopped status.		 */		function get isStopped() : Boolean;		/***		 * The media url.		 */		function get url() : String;		/**		 * The position of the playhead, in seconds.		 */		function get position() : Number;		/**		 * The total playback duration, in seconds.		 */		function get duration() : Number;		/**		 * Amount of play-ahead buffer, in seconds.		 */		function get bufferLength() : Number;		/**		 * The percent played (0 - 1). 		 */		function get percentPlayed() : Number;		/**		 * The percent loaded (0 - 1). 		 */		function get percentLoaded() : Number;		/**		 * The media audio volume (0 - 1).		 */		function get volume() : Number;		/*** @private */		function set volume(volume : Number) : void;		/**		 * The media audio pan (0 - 1).		 */		function get pan() : Number;		/*** @private */		function set pan(pan : Number) : void;	}}