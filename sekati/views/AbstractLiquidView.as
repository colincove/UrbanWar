/** * sekati.views.AbstractLiquidView * @version 1.0.0 * @author jason m horwitz | sekati.com * Copyright (C) 2009  jason m horwitz, Sekat LLC. All Rights Reserved. * Released under the MIT License: http://www.opensource.org/licenses/mit-license.php */package sekati.views {	import sekati.display.LiquidSprite;	import sekati.utils.TypeEnforcer;		/**	 * AbstractLiquidView provides a liquid UI view abstract.	 * 	 * <p>The purpose pf the <code>views</code> package is to offer view abstracts of the core <code>display</code> package 	 * <code>DisplayObjects</code> to encourate initializing code in <code>configUI()</code> to gain the boost of the <i>JIT</i>	 * which is not available within the <code>constructor</code> and give a simple method for initializing view-type 	 * container / controller classes.</p>	 */	public class AbstractLiquidView extends LiquidSprite {		/**		 * AbstractLiquidView Constructor		 */		public function AbstractLiquidView() {			super( );			TypeEnforcer.enforceAbstract( this, AbstractLiquidView );			configUI( );					}		/**		 * Configure View Elements: We do this to gain JIT which is unavailable in the constructor.		 */		protected function configUI() : void {		}			}}